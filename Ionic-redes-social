CAMERA

$ ionic cordova plugin add cordova-plugin-camera
$ npm install --save @ionic-native/camera@4

import { Camera, CameraOptions } from '@ionic-native/camera';

constructor(private camera: Camera) { }

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
FILEOPINER

$ ionic cordova plugin add cordova-plugin-file-opener2
$ npm install --save @ionic-native/file-opener@4

import { FileOpener } from '@ionic-native/file-opener';

constructor(private fileOpener: FileOpener) { }
	
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
FILE


$ ionic cordova plugin add cordova-plugin-file
$ npm install --save @ionic-native/file@4

import { File } from '@ionic-native/file';

constructor(private file: File) { }

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
SOCIAL SHARE

$ ionic cordova plugin add cordova-plugin-x-socialsharing
$ npm install --save @ionic-native/social-sharing@4

import { SocialSharing } from '@ionic-native/social-sharing';

constructor(private socialSharing: SocialSharing) { }

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
BUG

cordova plugin add cordova-android-support-gradle-release --variable ANDROID_SUPPORT_VERSION=24.+
 
___________________________________+++++++++++++++++++++++++++++++++++++++++++++++++++++++++______________________________________________________



 saveImg() {

    let imageName = "empresa.jpg";
    const ROOT_DIRECTORY = 'file:///sdcard//';
    const downloadFolderName = 'tempDownloadFolder';

    this.file.createDir(ROOT_DIRECTORY, downloadFolderName, true)
      .then((entries) => {

      })

    this.file.copyFile(this.file.applicationDirectory + "www/assets/imgs/", imageName, ROOT_DIRECTORY + downloadFolderName + '//', imageName)
      .then((entries) => {

        this.fileOpener.open(ROOT_DIRECTORY + downloadFolderName + "/" + imageName, 'image/jpeg')
          .then(() => console.log('File is opened'))
          .catch(e => alert('Error' + JSON.stringify(e)));

      }).catch((error) => {
        alert('error ' + JSON.stringify(error));
      }).catch((error) => {
        alert('error' + JSON.stringify(error));
      });


  }

  shareImg() {

    let imageName = "empresa.jpg";
    const ROOT_DIRECTORY = 'file:///sdcard//';
    const downloadFolderName = 'tempDownloadFolder';

    this.file.createDir(ROOT_DIRECTORY, downloadFolderName, true)
      .then((entries) => {

        this.file.copyFile(this.file.applicationDirectory + "www/assets/imgs/", imageName, ROOT_DIRECTORY + downloadFolderName + '//', imageName)
          .then((entries) => {

            this.socialSharing.share("Message", "Subject", ROOT_DIRECTORY + downloadFolderName + "/" + imageName, imageName)
              .then((entries) => {
                console.log('success ' + JSON.stringify(entries));


              }).catch((error) => {
                alert('error ' + JSON.stringify(error));
              })
              .catch((error) => {
                alert('error ' + JSON.stringify(error));
              });
          })
          .catch((error) => {
            alert('error ' + JSON.stringify(error));
          });
      })
      .catch((error) => {
        alert('error ' + JSON.stringify(error));
      });



  }

}
